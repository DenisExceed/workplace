{"ast":null,"code":"var _jsxFileName = \"/home/user/work/react-redux-todo/todoList/src/app/Components/TodoItem/TodoItem.jsx\";\nimport React from 'react';\nimport Trash from \"../../Components/Trash/Trash\";\nimport RadioBadge from \"../../Components/RadioBadge/RadioBadge\";\nimport { connect } from 'react-redux';\nimport './TodoItem.scss';\n\nconst mapStateToProps = state => {\n  return { ...state\n  };\n};\n/**\n * todo implement here component which will show todo item\n * Component should contain checkbox text and trash icon for remove item\n *\n * This component should receive the following params\n * text -  name of task\n * id - id of task\n * checked - checked state of the task\n * onCheck - callback which should be called if the checkbox state was changed\n * onRemove - callback which should be called if the trash icon was called\n *\n * NOTE: need to pass task id into callbacks as param\n */\n\n\nconst TodoItem = state => {\n  return (\n    /*#__PURE__*/\n    // todo implement component markup here\n    React.createElement(\"li\", {\n      id: state.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"itemsEl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(RadioBadge, {\n      id: state.id,\n      checked: state.todos.checked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"itemText\",\n      className: props.todo.checked ? 'checked' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, props.todo.text), /*#__PURE__*/React.createElement(Trash, {\n      id: props.todo.id,\n      delete: props.delete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    })))\n  );\n};\n\nexport default connect(mapStateToProps)(TodoItem);","map":{"version":3,"sources":["/home/user/work/react-redux-todo/todoList/src/app/Components/TodoItem/TodoItem.jsx"],"names":["React","Trash","RadioBadge","connect","mapStateToProps","state","TodoItem","id","todos","checked","props","todo","text","delete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,iBAAP;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO,EACL,GAAGA;AADE,GAAP;AAGD,CAJD;AAMA;;;;;;;;;;;;;;;AAaA,MAAMC,QAAQ,GAAID,KAAD,IAAW;AAG1B;AAAA;AAAU;AAEN;AAAI,MAAA,EAAE,EAAEA,KAAK,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,UAAD;AACE,MAAA,EAAE,EAAEF,KAAK,CAACE,EADZ;AAEE,MAAA,OAAO,EAAIF,KAAK,CAACG,KAAN,CAAYC,OAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAKC;AAAM,MAAA,EAAE,EAAC,UAAT;AAAoB,MAAA,SAAS,EAAEC,KAAK,CAACC,IAAN,CAAWF,OAAX,GAAqB,SAArB,GAAiC,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqEC,KAAK,CAACC,IAAN,CAAWC,IAAhF,CALD,eAMC,oBAAC,KAAD;AACE,MAAA,EAAE,EAAEF,KAAK,CAACC,IAAN,CAAWJ,EADjB;AAEE,MAAA,MAAM,EAAEG,KAAK,CAACG,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CADD;AAFJ;AAgBC,CAnBH;;AAqBE,eAAeV,OAAO,CAACC,eAAD,CAAP,CAAyBE,QAAzB,CAAf","sourcesContent":["import React from 'react';\nimport Trash from \"../../Components/Trash/Trash\";\nimport RadioBadge from \"../../Components/RadioBadge/RadioBadge\";\nimport {connect} from 'react-redux';\nimport './TodoItem.scss';\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state\n  }\n}\n\n/**\n * todo implement here component which will show todo item\n * Component should contain checkbox text and trash icon for remove item\n *\n * This component should receive the following params\n * text -  name of task\n * id - id of task\n * checked - checked state of the task\n * onCheck - callback which should be called if the checkbox state was changed\n * onRemove - callback which should be called if the trash icon was called\n *\n * NOTE: need to pass task id into callbacks as param\n */\nconst TodoItem = (state) => {\n\n\n  return (  // todo implement component markup here\n  \n      <li id={state.id}>\n       <div className=\"itemsEl\">\n        <RadioBadge\n          id={state.id}\n          checked = {state.todos.checked}\n        />\n        <span id=\"itemText\" className={props.todo.checked ? 'checked' : ''}>{props.todo.text}</span>\n        <Trash \n          id={props.todo.id}\n          delete={props.delete}/>\n       </div> \n      </li>\n  \n    );\n  }\n\n  export default connect(mapStateToProps)(TodoItem)"]},"metadata":{},"sourceType":"module"}