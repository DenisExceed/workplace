{"ast":null,"code":"var _jsxFileName = \"/home/user/work/react-redux-todo/todoList/src/app/Components/Footer/Footer.jsx\";\n\n/* eslint-disable default-case */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport './Footer.scss';\nimport { connect } from 'react-redux';\nimport { actions } from '../../Containers/TodoList/todoSlice';\nimport store from '../../store';\n\nconst mapStateToProps = state => {\n  return { ...state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkAll: () => dispatch(actions.checkAll()),\n    clearCompleted: () => dispatch(actions.clearCompleted()),\n    All: () => dispatch(actions.All()),\n    ToDo: () => dispatch(actions.ToDo()),\n    Completed: () => dispatch(actions.Completed())\n  };\n};\n\nconst numOfCompleted = state => {\n  const completed = this.state.todos.filter(item => item.checked);\n  return completed.length;\n};\n\nconst numOfNotCompleted = state => {\n  console.log('', state);\n  const notCompleted = this.todos.filter(item => !item.checked);\n  return notCompleted.length;\n};\n\nconst Footer = state => {\n  let todoFooter = () => {\n    // if(state.todoSlice.todos.length > 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: state.checkAll,\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }\n    }, numOfNotCompleted(state), \" tasks left\"), /*#__PURE__*/React.createElement(ButtonGroup, {\n      variant: \"text\",\n      color: \"primary\",\n      \"aria-label\": \"text primary button group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: state.All,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: state.ToDo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    }, \"ToDo\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: state.Completed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    }, \"Completed\")), !!numOfCompleted(state) && /*#__PURE__*/React.createElement(Button, {\n      onClick: state.clearCompleted,\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 44\n      }\n    }, \"Clear completed\")); //  }\n  };\n\n  return /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  }, todoFooter());\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);","map":{"version":3,"sources":["/home/user/work/react-redux-todo/todoList/src/app/Components/Footer/Footer.jsx"],"names":["React","Button","ButtonGroup","connect","actions","store","mapStateToProps","state","mapDispatchToProps","dispatch","checkAll","clearCompleted","All","ToDo","Completed","numOfCompleted","completed","todos","filter","item","checked","length","numOfNotCompleted","console","log","notCompleted","Footer","todoFooter"],"mappings":"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","sourcesContent":["/* eslint-disable default-case */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport './Footer.scss';\nimport { connect } from 'react-redux';\nimport { actions } from '../../Containers/TodoList/todoSlice';\nimport store from '../../store';\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkAll: () => dispatch(actions.checkAll()),\n    clearCompleted: () => dispatch(actions.clearCompleted()),\n    All: () => dispatch(actions.All()),\n    ToDo: () => dispatch(actions.ToDo()),\n    Completed: () => dispatch(actions.Completed()),\n    };\n};\n\nconst numOfCompleted = (state) => {\n  const completed = this.state.todos.filter(item => item.checked);\n  return completed.length;\n}\n\nconst numOfNotCompleted = (state) => {\n  console.log('', state);\n  const notCompleted = this.todos.filter(item => !item.checked);\n  return notCompleted.length;\n}\n\n\n\nconst Footer = (state) => {\n\n\n    let todoFooter = () => {\n\n        // if(state.todoSlice.todos.length > 0) {\n\n\n            return (\n              <div className=\"footer\">\n               <Button onClick={state.checkAll} className=\"small\">{numOfNotCompleted(state)} tasks left</Button>  \n               <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n               <Button onClick={state.All}>All</Button>\n               <Button onClick={state.ToDo}>ToDo</Button>\n               <Button onClick={state.Completed}>Completed</Button>\n\n               </ButtonGroup>\n               {!!numOfCompleted(state) && <Button onClick={state.clearCompleted} className=\"small\">Clear completed</Button>}\n              </div>\n            );\n          //  }\n    }\n  \n    return (\n     <footer>\n         {todoFooter()}\n     </footer>\n    );\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Footer);"]},"metadata":{},"sourceType":"module"}