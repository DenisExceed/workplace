{"ast":null,"code":"var _jsxFileName = \"/home/user/work/react-redux-todo/todoList/src/app/Components/Footer/Footer.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport './Footer.scss';\nimport { connect } from 'react-redux';\nimport { actions } from '../../Containers/TodoList/todoSlice';\n\nconst mapStateToProps = state => {\n  return {\n    todo: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    add: obj => dispatch(actions.add(obj)),\n    remove: id => dispatch(actions.remove(id)),\n    markAsChecked: id => dispatch(actions.markAsChecked(id)),\n    clearCompleted: obj => dispatch(actions.clearCompleted(obj)),\n    checkAll: obj => dispatch(actions.checkAll(obj))\n  };\n};\n\nconst Footer = state => {\n  let todoFooter = () => {\n    // if(state.todos > 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    }, this.numOfNotCompleted(), \" tasks left\"), /*#__PURE__*/React.createElement(ButtonGroup, {\n      variant: \"text\",\n      color: \"primary\",\n      \"aria-label\": \"text primary button group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"ToDo\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.filter('Completed'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Completed\")), !!this.numOfCompleted() && /*#__PURE__*/React.createElement(Button, {\n      onClick: this.deleteCompletedTodos,\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 44\n      }\n    }, \"Clear completed\")); //  }\n  };\n\n  return /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }\n  }, todoFooter());\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);","map":{"version":3,"sources":["/home/user/work/react-redux-todo/todoList/src/app/Components/Footer/Footer.jsx"],"names":["React","Button","ButtonGroup","connect","actions","mapStateToProps","state","todo","mapDispatchToProps","dispatch","add","obj","remove","id","markAsChecked","clearCompleted","checkAll","Footer","todoFooter","numOfNotCompleted","filter","numOfCompleted","deleteCompletedTodos"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAO,eAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,qCAAxB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAED;AADD,GAAP;AAGD,CAJD;;AAMA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,GAAG,EAAGC,GAAD,IAASF,QAAQ,CAACL,OAAO,CAACM,GAAR,CAAYC,GAAZ,CAAD,CADjB;AAELC,IAAAA,MAAM,EAAGC,EAAD,IAAQJ,QAAQ,CAACL,OAAO,CAACQ,MAAR,CAAeC,EAAf,CAAD,CAFnB;AAGLC,IAAAA,aAAa,EAAGD,EAAD,IAAQJ,QAAQ,CAACL,OAAO,CAACU,aAAR,CAAsBD,EAAtB,CAAD,CAH1B;AAILE,IAAAA,cAAc,EAAGJ,GAAD,IAASF,QAAQ,CAACL,OAAO,CAACW,cAAR,CAAuBJ,GAAvB,CAAD,CAJ5B;AAKLK,IAAAA,QAAQ,EAAGL,GAAD,IAASF,QAAQ,CAACL,OAAO,CAACY,QAAR,CAAiBL,GAAjB,CAAD;AALtB,GAAP;AAOD,CARD;;AAUA,MAAMM,MAAM,GAAIX,KAAD,IAAW;AAGtB,MAAIY,UAAU,GAAG,MAAM;AACnB;AACI,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKC,iBAAL,EAA5B,gBADD,eAEC,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAC,MAArB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,oBAAW,2BAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,eAEC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKC,MAAL,CAAY,WAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHD,CAFD,EAOE,CAAC,CAAC,KAAKC,cAAL,EAAF,iBAA2B,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,oBAAtB;AAA4C,MAAA,SAAS,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAP7B,CADF,CAFe,CAajB;AACL,GAdD;;AAgBA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,UAAU,EADf,CADD;AAKD,CAxBH;;AA0BE,eAAef,OAAO,CAACE,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CS,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport './Footer.scss';\nimport { connect } from 'react-redux';\nimport { actions } from '../../Containers/TodoList/todoSlice';\n\nconst mapStateToProps = (state) => {\n  return {\n    todo: state,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    add: (obj) => dispatch(actions.add(obj)),\n    remove: (id) => dispatch(actions.remove(id)),\n    markAsChecked: (id) => dispatch(actions.markAsChecked(id)),\n    clearCompleted: (obj) => dispatch(actions.clearCompleted(obj)),\n    checkAll: (obj) => dispatch(actions.checkAll(obj)),\n    };\n};\n\nconst Footer = (state) => {\n\n \n    let todoFooter = () => {\n        // if(state.todos > 0) {\n            return (\n              <div className=\"footer\">\n               <Button  className=\"small\">{this.numOfNotCompleted()} tasks left</Button>  \n               <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n                <Button >All</Button>\n                <Button >ToDo</Button>\n                <Button onClick={() => this.filter('Completed')}>Completed</Button>\n               </ButtonGroup>\n               {!!this.numOfCompleted() && <Button onClick={this.deleteCompletedTodos} className=\"small\">Clear completed</Button>}\n              </div>\n            );\n          //  }\n    }\n  \n    return (\n     <footer>\n         {todoFooter()}\n     </footer>\n    );\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Footer);"]},"metadata":{},"sourceType":"module"}