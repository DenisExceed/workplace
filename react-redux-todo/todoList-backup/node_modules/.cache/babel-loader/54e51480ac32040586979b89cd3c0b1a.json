{"ast":null,"code":"var _jsxFileName = \"/home/user/work/react-redux-todo/todoList/src/app/Components/TodoInput/TodoInput.jsx\";\nimport React, { useState } from 'react';\nimport Input from '@material-ui/core/Input';\nimport IconButton from '@material-ui/icons/AddBox';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { connect } from 'react-redux';\nimport { getElementError } from '@testing-library/dom';\nimport { actions } from '../../Containers/TodoList/todoSlice';\n\nconst mapStateToProps = state => {\n  return { ...state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    add: obj => dispatch(actions.add(obj)),\n    remove: id => dispatch(actions.remove(id)),\n    markAsChecked: id => dispatch(actions.markAsChecked(id)),\n    clearCompleted: obj => dispatch(actions.clearCompleted(obj)),\n    checkAll: obj => dispatch(actions.checkAll(obj))\n  };\n};\n\nexport class TodoInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      if (event.target.value === '') {\n        return;\n      }\n\n      if (event.key === 'Enter') {\n        event.preventDefault();\n        this.props.create(this.state.value);\n        event.target.value = '';\n      }\n\n      if (event.type === 'click') {\n        this.props.create(this.state.value);\n        document.getElementById('input').value = '';\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"allTodoAdd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"input\",\n      onKeyPress: event => this.handleSubmit(event),\n      onChange: event => this.handleChange(event),\n      className: \"allTodoInput\",\n      placeholder: \"Enter your task\",\n      inputProps: {\n        'aria-label': 'description'\n      },\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => this.props.add({}),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(AddBoxIcon, {\n        className: \"hand\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n;\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);","map":{"version":3,"sources":["/home/user/work/react-redux-todo/todoList/src/app/Components/TodoInput/TodoInput.jsx"],"names":["React","useState","Input","IconButton","AddBoxIcon","InputAdornment","connect","getElementError","actions","mapStateToProps","state","mapDispatchToProps","dispatch","add","obj","remove","id","markAsChecked","clearCompleted","checkAll","TodoInput","Component","handleChange","event","setState","value","target","handleSubmit","key","preventDefault","props","create","type","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Input from '@material-ui/core/Input';\nimport IconButton from '@material-ui/icons/AddBox';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { connect } from 'react-redux';\n\nimport { getElementError } from '@testing-library/dom';\nimport { actions } from '../../Containers/TodoList/todoSlice';\n\nconst mapStateToProps = (state) => {\n  return {\n   ...state\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    add: (obj) => dispatch(actions.add(obj)),\n    remove: (id) => dispatch(actions.remove(id)),\n    markAsChecked: (id) => dispatch(actions.markAsChecked(id)),\n    clearCompleted: (obj) => dispatch(actions.clearCompleted(obj)),\n    checkAll: (obj) => dispatch(actions.checkAll(obj)),\n    };\n};\n\nexport class TodoInput extends React.Component {\n\n\n  handleChange = (event) => {\n      this.setState({ value: event.target.value })\n  }\n\n  handleSubmit = (event) => {\n\n      if (event.target.value === '') {\n          return;\n      }\n\n      if (event.key === 'Enter') {\n        event.preventDefault();\n        this.props.create(this.state.value);\n        event.target.value = '';\n      }\n\n      if (event.type === 'click') {\n      this.props.create(this.state.value);\n      document.getElementById('input').value = '';\n      }\n\n  } \n\nrender() {\n\n   return (\n   <div className=\"allTodoAdd\">\n    <Input id=\"input\" \n      onKeyPress = {(event) => this.handleSubmit(event)}\n      onChange = {(event) => this.handleChange(event)} \n      className =\"allTodoInput\" placeholder=\"Enter your task\" \n      inputProps = {{ 'aria-label': 'description' }}\n      endAdornment={\n        <InputAdornment position=\"end\">\n          <IconButton onClick={() => this.props.add({\n \n          })}>\n            <AddBoxIcon className=\"hand\"/>\n          </IconButton>\n        </InputAdornment>} \n    />\n   </div>);\n  }\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);"]},"metadata":{},"sourceType":"module"}