{"ast":null,"code":"var _jsxFileName = \"/home/user/work/react-redux-todo/todoList/src/App.js\";\n\n/* eslint-disable default-case */\nimport React from 'react';\nimport './App.css';\nimport TodoList from \"./app/Containers/TodoList/TodoList\";\nimport Header from \"./app/Components/Header/Header\";\nimport TodoInput from \"./app/Components/TodoInput/TodoInput\";\nimport Card from '@material-ui/core/Card';\nimport Footer from './app/Components/Footer/Footer';\nimport { actions } from './app/Containers/TodoList/todoSlice';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.numOfCompleeted = () => {\n      const completed = this.state.todos.filter(item => item.checked);\n      return completed.length;\n    };\n\n    this.numOfNotCompleeted = () => {\n      const notCompleted = this.state.todos.filter(item => item.checked === false);\n      return notCompleted.length;\n    };\n\n    this.setFilter = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.setCaseFilter = item => {\n      switch (this.state.filter) {\n        case 'All':\n          return true;\n\n        case 'ToDo':\n          return !item.checked;\n\n        case 'Completed':\n          return item.checked;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"allTodo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TodoInput, {\n      create: this.props.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TodoList, {\n      complete: this.props.markAsChecked,\n      todos: this.state.todos.filter(this.setCaseFilter),\n      delete: this.props.remove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      todos: this.state.todos.length,\n      numOfNotCompleted: this.numOfNotCompleeted,\n      numOfCompleted: this.numOfCompleeted,\n      deleteCompletedTodos: this.props.clearCompleted,\n      filter: this.setFilter,\n      completeAll: this.props.checkAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nconst mstp = state => {\n  return {\n    count: state.todoSlice.count,\n    add: state.todoSlice.add,\n    remove: state.todoSlice.remove,\n    markAsChecked: state.todoSlice.markAsChecked,\n    clearCompleted: state.todoSlice.clearCompleted,\n    checkAll: state.todoSlice.checkAll\n  };\n};\n\nconst mdtp = dispatch => {\n  return {\n    add: arg => {\n      dispatch(actions.add(arg));\n    },\n    remove: arg => {\n      dispatch(actions.remove(arg));\n    },\n    markAsChecked: arg => {\n      dispatch(actions.markAsChecked(arg));\n    },\n    clearCompleted: arg => {\n      dispatch(actions.clearCompleted(arg));\n    },\n    checkAll: arg => {\n      dispatch(actions.checkAll(arg));\n    }\n  };\n};\n\nexport default connect(mstp, mdtp)(App);","map":{"version":3,"sources":["/home/user/work/react-redux-todo/todoList/src/App.js"],"names":["React","TodoList","Header","TodoInput","Card","Footer","actions","connect","App","Component","numOfCompleeted","completed","state","todos","filter","item","checked","length","numOfNotCompleeted","notCompleted","setFilter","setState","setCaseFilter","render","props","add","markAsChecked","remove","clearCompleted","checkAll","mstp","count","todoSlice","mdtp","dispatch","arg"],"mappings":"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","sourcesContent":["/* eslint-disable default-case */\nimport React from 'react';\nimport './App.css';\nimport TodoList from \"./app/Containers/TodoList/TodoList\";\nimport Header from \"./app/Components/Header/Header\";\nimport TodoInput from \"./app/Components/TodoInput/TodoInput\";\nimport Card from '@material-ui/core/Card';\nimport Footer from './app/Components/Footer/Footer';\nimport {actions} from './app/Containers/TodoList/todoSlice';\nimport { connect } from 'react-redux';\n\n\n\nclass App extends React.Component {\n\n\nnumOfCompleeted = () => {\n  const completed = this.state.todos.filter(item => item.checked);\n  return completed.length;\n}\n\nnumOfNotCompleeted = () => {\n  const notCompleted = this.state.todos.filter(item => item.checked === false);\n  return notCompleted.length;\n}\n\nsetFilter = (filter) => {\n  this.setState({filter})\n}\n\nsetCaseFilter = (item) => {\n  switch(this.state.filter) {\n\n    case 'All':\n      return true;\n\n    case 'ToDo':\n      return !item.checked;\n      \n    case 'Completed':\n      return item.checked;  \n  }\n}\n\n\n\nrender() {\n\n  return (\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n        {/*todo place your todo header here */}\n        <Header />\n      </header>\n      <section>\n      <Card className=\"allTodo\">\n        <TodoInput \n         create = {this.props.add}\n        />\n        <TodoList \n         complete = {this.props.markAsChecked} \n         todos = {this.state.todos.filter(this.setCaseFilter)}\n         delete = {this.props.remove}\n        />\n        <Footer \n         todos = {this.state.todos.length}\n         numOfNotCompleted = {this.numOfNotCompleeted}\n         numOfCompleted = {this.numOfCompleeted}\n         deleteCompletedTodos = {this.props.clearCompleted}\n         filter = {this.setFilter}\n         completeAll = {this.props.checkAll}\n        />\n      </Card>\n      </section>\n    </div>\n  );\n }\n}\n\nconst mstp = (state) => {\n  return {\n    count: state.todoSlice.count,\n    add: state.todoSlice.add,\n    remove: state.todoSlice.remove,\n    markAsChecked: state.todoSlice.markAsChecked,\n    clearCompleted: state.todoSlice.clearCompleted,\n    checkAll: state.todoSlice.checkAll,\n  }\n}\n\nconst mdtp = (dispatch) => {\n  return {\n    add: (arg) => {\n      dispatch(actions.add(arg));\n    },\n    remove: (arg) => {\n      dispatch(actions.remove(arg));\n    },\n    markAsChecked: (arg) => {\n      dispatch(actions.markAsChecked(arg));\n    },\n    clearCompleted: (arg) => {\n      dispatch(actions.clearCompleted(arg));\n    },\n    checkAll: (arg) => {\n      dispatch(actions.checkAll(arg));\n    }\n  }\n}\n\n\nexport default connect(mstp, mdtp)(App);\n"]},"metadata":{},"sourceType":"module"}