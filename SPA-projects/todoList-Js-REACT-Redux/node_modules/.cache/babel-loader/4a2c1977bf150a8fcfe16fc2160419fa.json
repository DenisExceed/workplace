{"ast":null,"code":"var _jsxFileName = \"/home/user/work/react-redux-todo/todoList/src/app/Containers/TodoList/TodoList.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport TodoItem from '../../Components/TodoItem/TodoItem';\nimport { actions } from './todoSlice';\n/**\n * todo implement component called ToDoInput\n * which should receive onSubmit function which will be called on the press enter key\n * should receive placeholder value which should show as placeholder for the input\n * this input changes should be managed by local state inside ToDoInput component\n * Use this component for enter tasks name\n */\n//import ToDoInput from \"../../Components/TodoInput/ToDoInput\";\n\nimport { bindActionCreators } from \"../../utils/store\";\nimport './TodoList.scss';\n/**\n * todo use this list of the control badges to show them at the control panel\n */\n// import { controlBadges } from '../../constants/todo';\n\n/**\n * todo implement HOC for display the list of the todos and control panel and input for add new todos\n */\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {//todo setup local state\n    };\n  }\n\n  render() {\n    const todoItems = this.props.todos.map(item => {\n      return /*#__PURE__*/React.createElement(TodoItem, {\n        key: item.id,\n        todo: item,\n        complete: this.props.complete,\n        delete: this.props.delete,\n        checked: this.props.checked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, todoItems));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todo: state\n  };\n}; //todo setup this method for get info from the global state\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    add: obj => dispatch(actions.add('obj')),\n    remove: obj => dispatch(actions.remove(obj)),\n    markAsChecked: obj => dispatch(actions.markAsChecked(obj)),\n    clearCompleted: obj => dispatch(actions.clearCompleted(obj)),\n    checkAll: obj => dispatch(actions.checkAll(obj))\n  };\n}; //todo implement this function\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["/home/user/work/react-redux-todo/todoList/src/app/Containers/TodoList/TodoList.jsx"],"names":["React","connect","TodoItem","actions","bindActionCreators","TodoList","Component","constructor","props","state","render","todoItems","todos","map","item","id","complete","delete","checked","mapStateToProps","todo","mapDispatchToProps","dispatch","add","obj","remove","markAsChecked","clearCompleted","checkAll"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA;;;;;;;AAOA;;AACA,SAAQC,kBAAR,QAAiC,mBAAjC;AAEA,OAAO,iBAAP;AAGA;;;AAIA;;AAGA;;;;AAGA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,CAAI;AAAJ,KAAb;AAGD;;AAGFC,EAAAA,MAAM,GAAG;AAEN,UAAMC,SAAS,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAAI;AAC7C,0BAAO,oBAAC,QAAD;AACP,QAAA,GAAG,EAAEA,IAAI,CAACC,EADH;AAEP,QAAA,IAAI,EAAED,IAFC;AAGP,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWQ,QAHd;AAIP,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWS,MAJZ;AAKP,QAAA,OAAO,EAAI,KAAKT,KAAL,CAAWU,OALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAOD,KARiB,CAAlB;AAUA,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,SADH,CADF,CADF;AAOD;;AA7BoC;;AAkCvC,MAAMQ,eAAe,GAAIV,KAAD,IAAW;AACjC,SAAO;AACLW,IAAAA,IAAI,EAAEX;AADD,GAAP;AAGD,CAJD,C,CAIG;;;AAEH,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,GAAG,EAAGC,GAAD,IAASF,QAAQ,CAACnB,OAAO,CAACoB,GAAR,CAAY,KAAZ,CAAD,CADjB;AAELE,IAAAA,MAAM,EAAGD,GAAD,IAASF,QAAQ,CAACnB,OAAO,CAACsB,MAAR,CAAeD,GAAf,CAAD,CAFpB;AAGLE,IAAAA,aAAa,EAAGF,GAAD,IAASF,QAAQ,CAACnB,OAAO,CAACuB,aAAR,CAAsBF,GAAtB,CAAD,CAH3B;AAILG,IAAAA,cAAc,EAAGH,GAAD,IAASF,QAAQ,CAACnB,OAAO,CAACwB,cAAR,CAAuBH,GAAvB,CAAD,CAJ5B;AAKLI,IAAAA,QAAQ,EAAGJ,GAAD,IAASF,QAAQ,CAACnB,OAAO,CAACyB,QAAR,CAAiBJ,GAAjB,CAAD;AALtB,GAAP;AAOD,CARD,C,CAQG;;;AAIH,eAAevB,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport TodoItem from '../../Components/TodoItem/TodoItem';\nimport {actions}  from './todoSlice';\n/**\n * todo implement component called ToDoInput\n * which should receive onSubmit function which will be called on the press enter key\n * should receive placeholder value which should show as placeholder for the input\n * this input changes should be managed by local state inside ToDoInput component\n * Use this component for enter tasks name\n */\n//import ToDoInput from \"../../Components/TodoInput/ToDoInput\";\nimport {bindActionCreators} from \"../../utils/store\";\n\nimport './TodoList.scss'\n\n\n/**\n * todo use this list of the control badges to show them at the control panel\n */\n\n// import { controlBadges } from '../../constants/todo';\n\n\n/**\n * todo implement HOC for display the list of the todos and control panel and input for add new todos\n */\nclass TodoList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {   //todo setup local state\n\n    };\n  }\n  \n\n render() {\n\n    const todoItems = this.props.todos.map(item => {\n      return <TodoItem \n      key={item.id} \n      todo={item}\n      complete={this.props.complete}\n      delete={this.props.delete}\n      checked = {this.props.checked}\n      />\n    });\n\n    return (\n      <div className=\"my-todo\">\n        <ul>\n          {todoItems}\n        </ul>\n      </div>\n    );\n  }\n\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    todo: state,\n  };\n}; //todo setup this method for get info from the global state\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    add: (obj) => dispatch(actions.add('obj')),\n    remove: (obj) => dispatch(actions.remove(obj)),\n    markAsChecked: (obj) => dispatch(actions.markAsChecked(obj)),\n    clearCompleted: (obj) => dispatch(actions.clearCompleted(obj)),\n    checkAll: (obj) => dispatch(actions.checkAll(obj)),\n  };\n}; //todo implement this function\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)"]},"metadata":{},"sourceType":"module"}