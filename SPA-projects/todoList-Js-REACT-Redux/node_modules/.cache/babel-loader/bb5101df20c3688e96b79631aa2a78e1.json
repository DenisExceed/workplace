{"ast":null,"code":"var _jsxFileName = \"/home/user/work/react-redux-todo/todoList/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\nstore.subscribe(() => {\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()));\n});\n\nconst getTodosFromLocalStorage = () => {\n  const persistedState = localStorage.getItem('reduxState');\n\n  if (persistedState) {\n    return JSON.parse(persistedState);\n  }\n};\n\nconst todos = getTodosFromLocalStorage();\n\nif (todos) {\n  store.dispatch(hydrate(todos));\n} //todo setup Provider here for use store from the './app/store'\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/user/work/react-redux-todo/todoList/src/index.js"],"names":["React","ReactDOM","App","store","Provider","serviceWorker","subscribe","localStorage","setItem","JSON","stringify","getState","getTodosFromLocalStorage","persistedState","getItem","parse","todos","dispatch","hydrate","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,uCAAP;AAEAF,KAAK,CAACG,SAAN,CAAgB,MAAI;AAClBC,EAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeP,KAAK,CAACQ,QAAN,EAAf,CAAnC;AACD,CAFD;;AAIA,MAAMC,wBAAwB,GAAG,MAAM;AAEnC,QAAMC,cAAc,GAAGN,YAAY,CAACO,OAAb,CAAqB,YAArB,CAAvB;;AACA,MAAID,cAAJ,EAAoB;AAClB,WAAOJ,IAAI,CAACM,KAAL,CAAWF,cAAX,CAAP;AACD;AACJ,CAND;;AAQA,MAAMG,KAAK,GAAGJ,wBAAwB,EAAtC;;AACA,IAAGI,KAAH,EAAS;AACPb,EAAAA,KAAK,CAACc,QAAN,CAAeC,OAAO,CAACF,KAAD,CAAtB;AACD,C,CAED;;;AACAf,QAAQ,CAACkB,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEhB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEiB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAhB,aAAa,CAACiB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\n\nstore.subscribe(()=>{\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n\nconst getTodosFromLocalStorage = () => {\n\n    const persistedState = localStorage.getItem('reduxState') \n    if (persistedState) {\n      return JSON.parse(persistedState)\n    }\n}\n\nconst todos = getTodosFromLocalStorage()\nif(todos){\n  store.dispatch(hydrate(todos))\n}\n\n//todo setup Provider here for use store from the './app/store'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}