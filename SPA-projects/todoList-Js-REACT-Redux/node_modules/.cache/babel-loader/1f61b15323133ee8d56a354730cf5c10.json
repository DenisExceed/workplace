{"ast":null,"code":"var _jsxFileName = \"/home/user/work/react-redux-todo/todoList/src/app/Components/Footer/Footer.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport './Footer.scss';\nimport { connect } from 'react-redux';\nimport { actions } from '../../Containers/TodoList/todoSlice';\n\nconst mapStateToProps = state => {\n  return { ...state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n}; // const numOfCompleeted = (todos) => {\n//   const completed = todos.filter(item => item.checked);\n//   return completed.length;\n// }\n\n\nconst numOfNotCompleeted = todos => {\n  const notCompleted = todos.filter(item => item.checked === false);\n  return notCompleted.length;\n}; // const setFilter = (filter) => {\n//   this.setState({filter})\n// }\n// const setCaseFilter = (item) => {\n//   switch(this.state.filter) {\n//     case 'All':\n//       return true;\n//     case 'ToDo':\n//       return !item.checked;\n//     case 'Completed':\n//       return item.checked;  \n//   }\n// }\n\n\nconst Footer = state => {\n  let todoFooter = () => {\n    if (state.todoSlice.todos.length > 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }\n      }, numOfNotCompleeted(), \" tasks left\"), /*#__PURE__*/React.createElement(ButtonGroup, {\n        variant: \"text\",\n        color: \"primary\",\n        \"aria-label\": \"text primary button group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, \"All\"), /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, \"ToDo\"), /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, \"Completed\")), /*#__PURE__*/React.createElement(Button, {\n        className: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, \"Clear completed\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }\n  }, todoFooter());\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);","map":{"version":3,"sources":["/home/user/work/react-redux-todo/todoList/src/app/Components/Footer/Footer.jsx"],"names":["React","Button","ButtonGroup","connect","actions","mapStateToProps","state","mapDispatchToProps","dispatch","numOfNotCompleeted","todos","notCompleted","filter","item","checked","length","Footer","todoFooter","todoSlice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAO,eAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,qCAAxB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO,EACL,GAAGA;AADE,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,EAAP;AAGD,CAJD,C,CAOA;AACA;AACA;AACA;;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC,QAAMC,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiB,KAAtC,CAArB;AACA,SAAOH,YAAY,CAACI,MAApB;AACD,CAHD,C,CAOA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AAIA,MAAMC,MAAM,GAAIV,KAAD,IAAW;AAEtB,MAAIW,UAAU,GAAG,MAAM;AAEnB,QAAGX,KAAK,CAACY,SAAN,CAAgBR,KAAhB,CAAsBK,MAAtB,GAA+B,CAAlC,EAAqC;AAEjC,0BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,MAAD;AAAS,QAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BN,kBAAkB,EAA9C,gBADD,eAEC,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAC,MAArB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,sBAAW,2BAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,eAEC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHD,CAFD,eAOE,oBAAC,MAAD;AAAS,QAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPF,CADF;AAWA;AACP,GAhBD;;AAkBA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,UAAU,EADf,CADD;AAKD,CAzBH;;AA2BE,eAAed,OAAO,CAACE,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CS,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport './Footer.scss';\nimport { connect } from 'react-redux';\nimport { actions } from '../../Containers/TodoList/todoSlice';\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n    };\n};\n\n\n// const numOfCompleeted = (todos) => {\n//   const completed = todos.filter(item => item.checked);\n//   return completed.length;\n// }\n\nconst numOfNotCompleeted = (todos) => {\n  const notCompleted = todos.filter(item => item.checked === false);\n  return notCompleted.length;\n}\n\n\n\n// const setFilter = (filter) => {\n//   this.setState({filter})\n// }\n\n// const setCaseFilter = (item) => {\n//   switch(this.state.filter) {\n\n//     case 'All':\n//       return true;\n\n//     case 'ToDo':\n//       return !item.checked;\n      \n//     case 'Completed':\n//       return item.checked;  \n//   }\n// }\n\n\n\nconst Footer = (state) => {\n\n    let todoFooter = () => {\n\n        if(state.todoSlice.todos.length > 0) {\n\n            return (\n              <div className=\"footer\">\n               <Button  className=\"small\">{numOfNotCompleeted()} tasks left</Button>  \n               <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n                <Button >All</Button>\n                <Button >ToDo</Button>\n                <Button >Completed</Button>\n               </ButtonGroup>\n               {<Button  className=\"small\">Clear completed</Button>}\n              </div>\n            );\n           }\n    }\n  \n    return (\n     <footer>\n         {todoFooter()}\n     </footer>\n    );\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Footer);"]},"metadata":{},"sourceType":"module"}