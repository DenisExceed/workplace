{"ast":null,"code":"var _jsxFileName = \"/home/user/work/react-redux-todo/todoList/src/App.js\";\n\n/* eslint-disable default-case */\nimport React from 'react';\nimport './App.css';\nimport TodoList from \"./app/Containers/TodoList/TodoList\";\nimport Header from \"./app/Components/Header/Header\";\nimport TodoInput from \"./app/Components/TodoInput/TodoInput\";\nimport Card from '@material-ui/core/Card';\nimport Footer from './app/Components/Footer/Footer';\nimport { actions } from './app/Containers/TodoList/todoSlice';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.addTodoAlex = this.addTodoAlex.bind(this);\n  }\n\n  addTodoAlex() {\n    this.props.test('PAYLOAD');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTodoAlex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, \"Add TODO\"), /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"allTodo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TodoInput, {\n      create: this.props.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TodoList, {\n      complete: this.props.markAsChecked,\n      todos: this.state.todos.filter(this.setCaseFilter),\n      delete: this.props.remove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      todos: this.state.todos.length,\n      numOfNotCompleted: this.numOfNotCompleeted,\n      numOfCompleted: this.numOfCompleeted,\n      deleteCompletedTodos: this.props.clearCompleted,\n      filter: this.setFilter,\n      completeAll: this.props.checkAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nconst mstp = state => {\n  return { ...state\n  };\n};\n\nconst mdtp = dispatch => {\n  return {\n    add: arg => {\n      dispatch(actions.add(arg));\n    },\n    remove: arg => {\n      dispatch(actions.remove(arg));\n    },\n    markAsChecked: arg => {\n      dispatch(actions.markAsChecked(arg));\n    },\n    clearCompleted: arg => {\n      dispatch(actions.clearCompleted(arg));\n    },\n    checkAll: arg => {\n      dispatch(actions.checkAll(arg));\n    }\n  };\n};\n\nexport default connect(mstp, mdtp)(App);","map":{"version":3,"sources":["/home/user/work/react-redux-todo/todoList/src/App.js"],"names":["React","TodoList","Header","TodoInput","Card","Footer","actions","connect","App","Component","constructor","props","state","addTodoAlex","bind","test","render","add","markAsChecked","todos","filter","setCaseFilter","remove","length","numOfNotCompleeted","numOfCompleeted","clearCompleted","setFilter","checkAll","mstp","mdtp","dispatch","arg"],"mappings":"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","sourcesContent":["/* eslint-disable default-case */\nimport React from 'react';\nimport './App.css';\nimport TodoList from \"./app/Containers/TodoList/TodoList\";\nimport Header from \"./app/Components/Header/Header\";\nimport TodoInput from \"./app/Components/TodoInput/TodoInput\";\nimport Card from '@material-ui/core/Card';\nimport Footer from './app/Components/Footer/Footer';\nimport {actions} from './app/Containers/TodoList/todoSlice';\nimport { connect } from 'react-redux';\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = { \n\n    };\n\n    this.addTodoAlex = this.addTodoAlex.bind(this);\n  }\n\n\n\n\naddTodoAlex () {\n  this.props.test('PAYLOAD');\n}\n\nrender() {\n\n  return (\n    <div className=\"App\">\n\n      {/* <div>{console.log(this.props.add)}</div> */}\n      <button onClick={this.addTodoAlex}>Add TODO</button>\n\n      <header className=\"App-header\">\n        {/*todo place your todo header here */}\n        <Header />\n      </header>\n      <section>\n      <Card className=\"allTodo\">\n        <TodoInput \n         create = {this.props.add}\n        />\n        <TodoList \n         complete = {this.props.markAsChecked} \n         todos = {this.state.todos.filter(this.setCaseFilter)}\n         delete = {this.props.remove}\n        />\n        <Footer \n         todos = {this.state.todos.length}\n         numOfNotCompleted = {this.numOfNotCompleeted}\n         numOfCompleted = {this.numOfCompleeted}\n         deleteCompletedTodos = {this.props.clearCompleted}\n         filter = {this.setFilter}\n         completeAll = {this.props.checkAll}\n        />\n      </Card>\n      </section>\n    </div>\n  );\n }\n}\n\nconst mstp = (state) => {\n  return {\n   ...state\n  }\n}\n\nconst mdtp = (dispatch) => {\n  return {\n    add: (arg) => {\n      dispatch(actions.add(arg));\n    },\n    remove: (arg) => {\n      dispatch(actions.remove(arg));\n    },\n    markAsChecked: (arg) => {\n      dispatch(actions.markAsChecked(arg));\n    },\n    clearCompleted: (arg) => {\n      dispatch(actions.clearCompleted(arg));\n    },\n    checkAll: (arg) => {\n      dispatch(actions.checkAll(arg));\n    }\n  }\n}\n\n\nexport default connect(mstp, mdtp)(App);\n"]},"metadata":{},"sourceType":"module"}