{"ast":null,"code":"var _jsxFileName = \"/home/user/work/react-redux-todo/todoList/src/app/Components/TodoInput/TodoInput.jsx\";\nimport React, { useState } from 'react';\nimport Input from '@material-ui/core/Input';\nimport IconButton from '@material-ui/icons/AddBox';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { connect } from 'react-redux';\nimport { getElementError } from '@testing-library/dom';\nimport { actions } from '../../Containers/TodoList/todoSlice';\n\nconst mapStateToProps = state => {\n  return { ...state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleChange: event => dispatch({\n      type: 'ON_CHANGE_TEXT',\n      payload: event.target.value\n    }),\n    add: obj => dispatch(actions.add(obj)),\n    remove: id => dispatch(actions.remove(id)),\n    markAsChecked: id => dispatch(actions.markAsChecked(id)),\n    clearCompleted: obj => dispatch(actions.clearCompleted(obj)),\n    checkAll: obj => dispatch(actions.checkAll(obj))\n  };\n};\n\nexport class TodoInput extends React.Component {\n  constructor(props) {\n    super(props); // this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n  } // handleChange = (event) => {\n  //     // this.setState({ value: event.target.value })\n  //     const { value } = event.target.value;\n  //     this.props.value(value);\n  // }\n  // handleSubmit = (event) => {\n  //     if (event.target.value === '') {\n  //         return;\n  //     }\n  //     if (event.key === 'Enter') {\n  //       event.preventDefault();\n  //       this.props.create(this.state.value);\n  //       event.target.value = '';\n  //     }\n  //     if (event.type === 'click') {\n  //       this.props.create(this.state.value);\n  //       document.getElementById('input').value = '';\n  //     }\n  // } \n\n\n  render() {\n    console.log;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"allTodoAdd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"input\",\n      onKeyPress: this.handleSubmit,\n      onChange: event => this.props.handleChange(event),\n      className: \"allTodoInput\",\n      placeholder: \"Enter your task\",\n      inputProps: {\n        'aria-label': 'description'\n      },\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(AddBoxIcon, {\n        className: \"hand\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n;\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);","map":{"version":3,"sources":["/home/user/work/react-redux-todo/todoList/src/app/Components/TodoInput/TodoInput.jsx"],"names":["React","useState","Input","IconButton","AddBoxIcon","InputAdornment","connect","getElementError","actions","mapStateToProps","state","mapDispatchToProps","dispatch","handleChange","event","type","payload","target","value","add","obj","remove","id","markAsChecked","clearCompleted","checkAll","TodoInput","Component","constructor","props","render","console","log","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,OAAT,QAAwB,qCAAxB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO,EACN,GAAGA;AADG,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,YAAY,EAAGC,KAAD,IAAWF,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,gBAAP;AAAwBC,MAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA9C,KAAD,CAD5B;AAELC,IAAAA,GAAG,EAAGC,GAAD,IAASR,QAAQ,CAACJ,OAAO,CAACW,GAAR,CAAYC,GAAZ,CAAD,CAFjB;AAGLC,IAAAA,MAAM,EAAGC,EAAD,IAAQV,QAAQ,CAACJ,OAAO,CAACa,MAAR,CAAeC,EAAf,CAAD,CAHnB;AAILC,IAAAA,aAAa,EAAGD,EAAD,IAAQV,QAAQ,CAACJ,OAAO,CAACe,aAAR,CAAsBD,EAAtB,CAAD,CAJ1B;AAKLE,IAAAA,cAAc,EAAGJ,GAAD,IAASR,QAAQ,CAACJ,OAAO,CAACgB,cAAR,CAAuBJ,GAAvB,CAAD,CAL5B;AAMLK,IAAAA,QAAQ,EAAGL,GAAD,IAASR,QAAQ,CAACJ,OAAO,CAACiB,QAAR,CAAiBL,GAAjB,CAAD;AANtB,GAAP;AAQD,CATD;;AAWA,OAAO,MAAMM,SAAN,SAAwB1B,KAAK,CAAC2B,SAA9B,CAAwC;AAE7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;AACA;AACD,GAP4C,CAS7C;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;AAEFC,EAAAA,MAAM,GAAG;AACTC,IAAAA,OAAO,CAACC,GAAR;AACG,wBACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAE,OAAX;AACE,MAAA,UAAU,EAAI,KAAKC,YADrB;AAEE,MAAA,QAAQ,EAAKnB,KAAD,IAAW,KAAKe,KAAL,CAAWhB,YAAX,CAAwBC,KAAxB,CAFzB;AAGE,MAAA,SAAS,EAAE,cAHb;AAIE,MAAA,WAAW,EAAC,iBAJd;AAKE,MAAA,UAAU,EAAI;AAAE,sBAAc;AAAhB,OALhB;AAME,MAAA,YAAY,eACV,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKmB,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADA;AAgBA;;AApD4C;AAsD9C;AAED,eAAe3B,OAAO,CAACG,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Ce,SAA7C,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport Input from '@material-ui/core/Input';\nimport IconButton from '@material-ui/icons/AddBox';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { connect } from 'react-redux';\n\nimport { getElementError } from '@testing-library/dom';\nimport { actions } from '../../Containers/TodoList/todoSlice';\n\nconst mapStateToProps = (state) => {\n  return {\n   ...state\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleChange: (event) => dispatch({type: 'ON_CHANGE_TEXT',payload: event.target.value} ),\n    add: (obj) => dispatch(actions.add(obj)),\n    remove: (id) => dispatch(actions.remove(id)),\n    markAsChecked: (id) => dispatch(actions.markAsChecked(id)),\n    clearCompleted: (obj) => dispatch(actions.clearCompleted(obj)),\n    checkAll: (obj) => dispatch(actions.checkAll(obj)),\n    };\n};\n\nexport class TodoInput extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // handleChange = (event) => {\n  //     // this.setState({ value: event.target.value })\n\n  //     const { value } = event.target.value;\n  //     this.props.value(value);\n  // }\n  // handleSubmit = (event) => {\n\n  //     if (event.target.value === '') {\n  //         return;\n  //     }\n\n  //     if (event.key === 'Enter') {\n  //       event.preventDefault();\n  //       this.props.create(this.state.value);\n  //       event.target.value = '';\n  //     }\n\n  //     if (event.type === 'click') {\n  //       this.props.create(this.state.value);\n  //       document.getElementById('input').value = '';\n  //     }\n\n  // } \n\nrender() {\nconsole.log\n   return (\n   <div className=\"allTodoAdd\">\n    <Input id =\"input\" \n      onKeyPress = {this.handleSubmit}\n      onChange = {(event) => this.props.handleChange(event)} \n      className =\"allTodoInput\" \n      placeholder=\"Enter your task\" \n      inputProps = {{ 'aria-label': 'description' }}\n      endAdornment={\n        <InputAdornment position=\"end\">\n          <IconButton onClick={this.handleSubmit}>\n            <AddBoxIcon className=\"hand\"/>\n          </IconButton>\n        </InputAdornment>} \n    />\n   </div>);\n  }\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);"]},"metadata":{},"sourceType":"module"}