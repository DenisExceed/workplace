{"ast":null,"code":"var _jsxFileName = \"/home/user/work/react-redux-todo/todoList/src/app/Components/Footer/Footer.jsx\";\n\n/* eslint-disable default-case */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport './Footer.scss';\nimport { connect } from 'react-redux';\nimport { actions } from '../../Containers/TodoList/todoSlice';\n\nconst mapStateToProps = state => {\n  return { ...state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkAll: () => dispatch(actions.checkAll()),\n    clearCompleted: () => dispatch(actions.clearCompleted()),\n    All: () => dispatch(actions.All()),\n    ToDo: () => dispatch(actions.ToDo()),\n    Completed: () => dispatch(actions.Completed())\n  };\n};\n\nconst numOfCompleted = state => {\n  console.log(`state`, state.todoSlice.todos);\n  state.todoSlice.todos.forEach(checked => item.checked);\n  const completed = state.todoSlice.todos.filter(item => item.checked);\n  return completed.length;\n};\n\nconst numOfNotCompleted = state => {\n  const notCompleted = state.todoSlice.todos.filter(item => !item.checked);\n  return notCompleted.length;\n};\n\nconst Footer = state => {\n  let todoFooter = () => {\n    if (state.todoSlice.todos.length > 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: state.checkAll,\n        className: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }\n      }, numOfNotCompleted(state), \" tasks left\"), /*#__PURE__*/React.createElement(ButtonGroup, {\n        variant: \"text\",\n        color: \"primary\",\n        \"aria-label\": \"text primary button group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: state.All,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }\n      }, \"All\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: state.ToDo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }\n      }, \"ToDo\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: state.Completed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }\n      }, \"Completed\")), !!numOfCompleted(state) && /*#__PURE__*/React.createElement(Button, {\n        onClick: state.clearCompleted,\n        className: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 44\n        }\n      }, \"Clear completed\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }, todoFooter());\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);","map":{"version":3,"sources":["/home/user/work/react-redux-todo/todoList/src/app/Components/Footer/Footer.jsx"],"names":["React","Button","ButtonGroup","connect","actions","mapStateToProps","state","mapDispatchToProps","dispatch","checkAll","clearCompleted","All","ToDo","Completed","numOfCompleted","console","log","todoSlice","todos","forEach","checked","item","completed","filter","length","numOfNotCompleted","notCompleted","Footer","todoFooter"],"mappings":"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","sourcesContent":["/* eslint-disable default-case */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport './Footer.scss';\nimport { connect } from 'react-redux';\nimport { actions } from '../../Containers/TodoList/todoSlice';\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkAll: () => dispatch(actions.checkAll()),\n    clearCompleted: () => dispatch(actions.clearCompleted()),\n    All: () => dispatch(actions.All()),\n    ToDo: () => dispatch(actions.ToDo()),\n    Completed: () => dispatch(actions.Completed()),\n    };\n};\n\nconst numOfCompleted = (state) => {\n  console.log(`state`, state.todoSlice.todos)\n\n  state.todoSlice.todos.forEach(checked => item.checked)\n  const completed = state.todoSlice.todos.filter(item => item.checked);\n  return completed.length;\n}\n\nconst numOfNotCompleted = (state) => {\n  const notCompleted = state.todoSlice.todos.filter(item => !item.checked);\n  return notCompleted.length;\n}\n\n\nconst Footer = (state) => {\n\n\n    let todoFooter = () => {\n\n        if(state.todoSlice.todos.length > 0) {\n\n            return (\n              <div className=\"footer\">\n               <Button onClick={state.checkAll} className=\"small\">{numOfNotCompleted(state)} tasks left</Button>  \n               <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n               <Button onClick={state.All}>All</Button>\n               <Button onClick={state.ToDo}>ToDo</Button>\n               <Button onClick={state.Completed}>Completed</Button>\n\n               </ButtonGroup>\n               {!!numOfCompleted(state) && <Button onClick={state.clearCompleted} className=\"small\">Clear completed</Button>}\n              </div>\n            );\n           }\n    }\n  \n    return (\n     <footer>\n         {todoFooter()}\n     </footer>\n    );\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Footer);"]},"metadata":{},"sourceType":"module"}