{"ast":null,"code":"var _jsxFileName = \"/home/user/work/react-redux-todo/todoList/src/app/Components/TodoInput/TodoInput.jsx\";\nimport React from 'react';\nimport Input from '@material-ui/core/Input';\nimport IconButton from '@material-ui/icons/AddBox';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { connect } from 'react-redux'; //import { getElementError } from '@testing-library/dom';\n\nimport { actions } from '../../Containers/TodoList/todoSlice';\nimport axios from 'axios';\n\nconst mapStateToProps = state => {\n  const {\n    todos\n  } = state;\n  console.log(`todos`, todos);\n  return { ...state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeInput: value => dispatch(actions.handleChange(value)),\n    submitInput: res => {\n      console.log(2, res);\n      dispatch(actions.add(res));\n    },\n    getTodos: res => dispatch(actions.get(res.data))\n  };\n};\n\nexport class TodoInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = event => {\n      this.props.changeInput(event.target.value);\n    };\n\n    this.handleSubmit = event => {\n      if (event.key === 'Enter' || event.type === 'click') {\n        console.log(1);\n        this.props.submitInput(this.props.todoSlice.value);\n        this.props.changeInput('');\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await axios.get(`http://localhost:5000`).then(res => {\n      res = JSON.parse(JSON.stringify(res));\n      this.props.getTodos(res);\n    }).catch(error => console.log('Ошибка', error));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"allTodoAdd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"input\",\n      value: this.props.todoSlice.value,\n      onKeyPress: this.handleSubmit,\n      onChange: this.handleChange,\n      className: \"allTodoInput\",\n      placeholder: \"Enter your task\",\n      inputProps: {\n        'aria-label': 'description'\n      },\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(AddBoxIcon, {\n        className: \"hand\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n;\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);","map":{"version":3,"sources":["/home/user/work/react-redux-todo/todoList/src/app/Components/TodoInput/TodoInput.jsx"],"names":["React","Input","IconButton","AddBoxIcon","InputAdornment","connect","actions","axios","mapStateToProps","state","todos","console","log","mapDispatchToProps","dispatch","changeInput","value","handleChange","submitInput","res","add","getTodos","get","data","TodoInput","Component","event","props","target","handleSubmit","key","type","todoSlice","componentDidMount","then","JSON","parse","stringify","catch","error","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from '@material-ui/core/Input';\nimport IconButton from '@material-ui/icons/AddBox';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { connect } from 'react-redux';\n\n\n//import { getElementError } from '@testing-library/dom';\nimport { actions } from '../../Containers/TodoList/todoSlice';\nimport axios from 'axios';\n\nconst mapStateToProps = (state) => {\n  const {todos} = state;\n  console.log(`todos`, todos)\n  return {\n   ...state\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeInput: (value) => dispatch(actions.handleChange(value)),\n    submitInput: (res) => {\n      console.log(2, res);\n      dispatch(actions.add(res))\n    },\n    getTodos: (res) => dispatch(actions.get(res.data)),\n  }\n};\n\nexport class TodoInput extends React.Component {\n\n\n\n  handleChange = (event) => {\n    this.props.changeInput(event.target.value)\n  }\n\n  handleSubmit = (event) => {\n  \n    if (event.key === 'Enter' || event.type === 'click') {\n      console.log(1);\n      this.props.submitInput(this.props.todoSlice.value);\n      this.props.changeInput('');\n    }\n\n}\n\nasync componentDidMount() {\n\n  await axios\n  .get(`http://localhost:5000`)\n  .then((res) => {\n    res = JSON.parse(JSON.stringify(res))\n    this.props.getTodos(res);\n   })\n  .catch((error) => console.log('Ошибка', error));\n\n}\n\nrender() {\n   return (\n   <div className=\"allTodoAdd\">\n    <Input id =\"input\" \n      value = {this.props.todoSlice.value}\n      onKeyPress = {this.handleSubmit}\n      onChange = {this.handleChange} \n      className =\"allTodoInput\" \n      placeholder=\"Enter your task\" \n      inputProps = {{ 'aria-label': 'description' }}\n      endAdornment={\n        <InputAdornment position=\"end\">\n          <IconButton onClick={this.handleSubmit}>\n            <AddBoxIcon className=\"hand\"/>\n          </IconButton>\n        </InputAdornment>} \n    />\n   </div>);\n  }\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);"]},"metadata":{},"sourceType":"module"}